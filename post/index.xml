<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on marke life simple</title><link>http://wangjx.site/post/</link><description>Recent content in Posts on marke life simple</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 06 May 2021 14:38:35 +0800</lastBuildDate><atom:link href="http://wangjx.site/post/index.xml" rel="self" type="application/rss+xml"/><item><title>React生命周期</title><link>http://wangjx.site/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link><pubDate>Thu, 06 May 2021 14:38:35 +0800</pubDate><guid>http://wangjx.site/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid><description>前言 了解相关React生命周期函数 优化 挂载 组件实例初始化并插入到DOM过程 constructor(props) {super(props)} static getDerivedStateFromProps(nextProps, prevState) =&amp;gt; newState render() componentDidMount() getDerivedStateFromProps 当组件props变化时候可以在这个api中监听</description></item><item><title>Redux源码解析createStore</title><link>http://wangjx.site/post/redux%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90createstore/</link><pubDate>Sat, 24 Apr 2021 22:25:29 +0800</pubDate><guid>http://wangjx.site/post/redux%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90createstore/</guid><description>前言 该文章主要记录看redux源码时候遇到的疑惑点以及解惑 笔记 redux源码很短，主要核心内容就createStore自己在阅读的时候遇到一</description></item><item><title>Lc11 盛最多水的容器</title><link>http://wangjx.site/post/lc11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</link><pubDate>Thu, 22 Apr 2021 23:34:13 +0800</pubDate><guid>http://wangjx.site/post/lc11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</guid><description>题目 11. 盛最多水的容器 题解 max = (end - start) * getMin(height[end], height[start]) 暴力解法 就遍历两轮计算所有两个坐标值之间的情况，会超时 双指针法，从首尾两点开始计算，两点距离不变，m</description></item><item><title>Js创建对象的几种方式</title><link>http://wangjx.site/post/js%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link><pubDate>Mon, 19 Apr 2021 22:08:49 +0800</pubDate><guid>http://wangjx.site/post/js%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid><description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;了解js几种创建对象的方式&lt;/li&gt;
&lt;li&gt;了解原型&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Js深拷贝实现</title><link>http://wangjx.site/post/js%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0/</link><pubDate>Fri, 09 Apr 2021 14:12:02 +0800</pubDate><guid>http://wangjx.site/post/js%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0/</guid><description>为什么需要深拷贝 因为对象在内存中是在堆内存heap中存储，没法直接访问，只能通过地址指针来访问到。所以通常我们在拷贝对象时候只是拷贝了指针地</description></item><item><title>H5歌曲播放页面编写</title><link>http://wangjx.site/post/h5%E6%AD%8C%E6%9B%B2%E6%92%AD%E6%94%BE%E9%A1%B5%E9%9D%A2%E7%BC%96%E5%86%99/</link><pubDate>Thu, 08 Apr 2021 16:21:44 +0800</pubDate><guid>http://wangjx.site/post/h5%E6%AD%8C%E6%9B%B2%E6%92%AD%E6%94%BE%E9%A1%B5%E9%9D%A2%E7%BC%96%E5%86%99/</guid><description>背景 编写音频播放需求 实现 思路： 音频播放就用 audio标签来处理，音频内容挂载到audio元素(ad)上，把该元素隐藏。自己写下ui，然后通过</description></item><item><title>问题记录</title><link>http://wangjx.site/post/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 06 Apr 2021 16:08:02 +0800</pubDate><guid>http://wangjx.site/post/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid><description>fetch接口post数据时候需要写明Content-type 默认是text/plain 会导致接口获取不到请求的body数据。</description></item><item><title>http知识点</title><link>http://wangjx.site/post/http%E7%9F%A5%E8%AF%86%E7%82%B9/</link><pubDate>Tue, 06 Apr 2021 14:08:02 +0800</pubDate><guid>http://wangjx.site/post/http%E7%9F%A5%E8%AF%86%E7%82%B9/</guid><description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;http是什么&lt;/li&gt;
&lt;li&gt;https是什么&lt;/li&gt;
&lt;li&gt;http请求头包含哪些内容&lt;/li&gt;
&lt;li&gt;http建立连接过程&lt;/li&gt;
&lt;li&gt;get post什么区别&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>对js事件循环的理解</title><link>http://wangjx.site/post/%E5%AF%B9js%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%9A%84%E7%90%86%E8%A7%A3/</link><pubDate>Thu, 11 Jun 2020 19:33:04 +0800</pubDate><guid>http://wangjx.site/post/%E5%AF%B9js%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%9A%84%E7%90%86%E8%A7%A3/</guid><description>&lt;h4 id=&#34;前言&#34;&gt;前言&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;了解js作为单线程处理事件的顺序&lt;/li&gt;
&lt;li&gt;宏任务和微任务 同步任务 异步任务&lt;/li&gt;
&lt;li&gt;setTimeout/setInterval&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Nginx卸载重装和升级</title><link>http://wangjx.site/post/nginx%E5%8D%B8%E8%BD%BD%E9%87%8D%E8%A3%85%E5%92%8C%E5%8D%87%E7%BA%A7/</link><pubDate>Thu, 28 May 2020 11:18:26 +0800</pubDate><guid>http://wangjx.site/post/nginx%E5%8D%B8%E8%BD%BD%E9%87%8D%E8%A3%85%E5%92%8C%E5%8D%87%E7%BA%A7/</guid><description>前言 了解nginx在centos上安装和配置步骤 平滑升级 参考： https://www.jianshu.com/p/097d1f907289 步骤如下： 获取编译参数 获取指定版本源码 配置编译 替换升级 1 获取当前编译参数 通过</description></item><item><title>防抖和节流</title><link>http://wangjx.site/post/%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/</link><pubDate>Tue, 19 May 2020 14:31:14 +0800</pubDate><guid>http://wangjx.site/post/%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/</guid><description>前言 节流防抖 是什么 应用场景区分 实现 参考 https://zhuanlan.zhihu.com/p/38313717 https://juejin.im/post/5b8de829f265da43623c4261 节流和防抖 处理频繁请求的业务场景，比如「输入框keyup实时搜索查询请求」 「页面滚动触发的事件」，</description></item><item><title>前端跨域</title><link>http://wangjx.site/post/%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F/</link><pubDate>Mon, 11 May 2020 18:47:53 +0800</pubDate><guid>http://wangjx.site/post/%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F/</guid><description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;为什么会产生跨域&lt;/li&gt;
&lt;li&gt;解决方案&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;前端跨域产生&#34;&gt;前端跨域产生&lt;/h3&gt;
&lt;p&gt;浏览器安全策略 同源策略（同协议域名端口）&lt;/p&gt;</description></item></channel></rss>